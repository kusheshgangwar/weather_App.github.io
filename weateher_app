<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Real‑Time Weather App</title>
  <link rel="stylesheet" href="style.css" />
</head>
<body>
<style>
body {
  font-family: sans-serif;
  background: linear-gradient(135deg, #6eb5ff, #e0f7fa);
  color: #333;
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 100vh;
}
.weather-container {
  background: rgba(255,255,255,0.8);
  padding: 2rem;
  border-radius: 12px;
  text-align: center;
  max-width: 320px;
}
#temp {
  font-size: 3rem;
  margin: 1rem 0;
}
input, button {
  padding: 0.5rem;
  font-size: 1rem;
  margin-top: 1rem;
}
button {
  cursor: pointer;
}
</style>
  <div class="weather-container">
    <h1>Weather Now</h1>
    <div id="location">Loading…</div>
    <div id="temp">--°C</div>
    <div id="desc"></div>
    <div id="details"></div>
    <input type="text" id="city-input" placeholder="Enter city" />
    <button id="fetch-btn">Fetch Weather</button>
  </div>
  <script>
const elements = {
  location: document.getElementById('location'),
  temp: document.getElementById('temp'),
  desc: document.getElementById('desc'),
  details: document.getElementById('details'),
  cityInput: document.getElementById('city-input'),
  fetchBtn: document.getElementById('fetch-btn')
};

async function fetchByCoords(lat, lon) {
  const url = `https://api.open-meteo.com/v1/forecast?latitude=${lat}&longitude=${lon}&current_weather=true`;
  const res = await fetch(url);
  const data = await res.json();
  return data.current_weather;
}

async function fetchByCity(city) {
  // Geocode with Open-Meteo geocoding
  const geo = await fetch(`https://geocoding-api.open-meteo.com/v1/search?name=${encodeURIComponent(city)}`);
  const gdata = await geo.json();
  if (!gdata.results || gdata.results.length === 0) {
    alert('City not found');
    return;
  }
  const { latitude, longitude, name, country } = gdata.results[0];
  const cw = await fetchByCoords(latitude, longitude);
  return { ...cw, name: `${name}, ${country}` };
}

function display(weather) {
  elements.location.textContent = weather.name;
  elements.temp.textContent = weather.temperature + '°C';
  elements.desc.textContent = `Wind: ${weather.windspeed} km/h, Direction: ${weather.winddirection}°`;
  elements.details.textContent = `Time: ${weather.time}`;
}

elements.fetchBtn.addEventListener('click', async () => {
  const w = await fetchByCity(elements.cityInput.value);
  if (w) display(w);
});

window.addEventListener('load', () => {
  if (navigator.geolocation) {
    navigator.geolocation.getCurrentPosition(async pos => {
      const w = await fetchByCoords(pos.coords.latitude, pos.coords.longitude);
      w.name = 'Your Location';
      display(w);
    }, () => {
      elements.location.textContent = 'Enable location or use search.';
    });
  }
});

</script>
</body>
</html>
